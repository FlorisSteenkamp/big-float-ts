var t={d:(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},o:(t,n)=>Object.prototype.hasOwnProperty.call(t,n)},n={};function e(t){return t[t.length-1]}function r(t){var n=new ArrayBuffer(8);return new DataView(n).setFloat64(0,t,!1),Array.from(new Uint8Array(n))}function o(t){return r(t).map(s).join("")}function s(t){let n=t.toString(2);for(;n.length<8;n="0"+n);return n}function i(t){let n=r(t),e=n[0],o=n[1],s=e>>7,i=((127&e)<<4)+((240&o)>>4),u=0===i?0:16,l=0===i?i-1022:i-1023,a=n.slice(1);return a[0]=(15&o)+u,{sign:s,exponent:l,significand:a}}function u(t){let n=o(t),[,e,r,s]=n.match(/^(.)(.{11})(.{52})$/),i=0===parseInt(r,2)?"0":"1";return{full:e+r+i+s,sign:e,exponent:r,hidden:i,significand:s}}function l(t){return i(t).significand}function a(t){return Math.log2(t&-t)}function f(t){if(0===t||!Number.isFinite(t))return NaN;let n=l(t),e=n.length;for(let t=e-1;t>=0;t--){if(0===n[t])continue;let r=a(n[t]);if(Number.isFinite(r))return 8*(e-t-1)+r}return NaN}function c(t){return t>=128?7:t>=64?6:t>=32?5:t>=16?4:t>=8?3:t>=4?2:t>=2?1:t>=1?0:NaN}function h(t){if(0===t||!Number.isFinite(t))return NaN;let n=l(t),e=n.length;for(let t=0;t<e;t++){let r=c(n[t]);if(Number.isFinite(r))return 8*(e-t-1)+r}return NaN}function g(t){return i(t).exponent}function p(t){if(0===t||!Number.isFinite(t))return NaN;let n=g(t);return h(t)-52+n}function d(t){const n=t.slice(),e=n.length;if(1===e)return n;let r=n[e-1],o=e;for(let t=e-2;t>=0;--t){const e=r,s=n[t];r=e+s;const i=s-(r-e);i&&(n[--o]=r,r=i)}let s=0;for(let t=o;t<e;++t){const e=n[t],o=r;r=e+o;const i=o-(r-e);i&&(n[s++]=i)}return n[s++]=r,n.length=s,n}function b(t,n){const e=(2**(53-n)+1)*t;return e-(e-t)}t.d(n,{ZS:()=>I,pr:()=>o,xm:()=>r,uP:()=>ut,_L:()=>Zt,lG:()=>zt,$0:()=>Bt,AM:()=>st,Zx:()=>d,w1:()=>T,sZ:()=>X,lX:()=>ht,$A:()=>N,yl:()=>et,K9:()=>It,lb:()=>Xt,bN:()=>tt,xr:()=>Vt,aB:()=>ft,kS:()=>ct,fX:()=>$t,xS:()=>qt,ab:()=>E,Fp:()=>Ft,bx:()=>ot,qv:()=>e,g_:()=>G,XB:()=>D,fN:()=>Kt,kq:()=>O,Q7:()=>y,ts:()=>g,xK:()=>w,Fz:()=>lt,vz:()=>at,kx:()=>h,hK:()=>f,Yj:()=>Z,Ku:()=>Ct,m5:()=>bt,V1:()=>jt,pt:()=>mt,Jw:()=>p,Gn:()=>Gt,IW:()=>Lt,Ds:()=>i,JO:()=>u,S4:()=>b,Fs:()=>v,R9:()=>B,aK:()=>l,Vl:()=>gt,BH:()=>pt,Q6:()=>dt,d9:()=>z});const m=e,x=d;function D(t,n){if(t=x(t),0===m(t))return[0];let e=p(t[t.length-1]),r=e,o=t.length-1;for(;o>0;){let s=p(t[o-1]);if(e-s>n)break;r=s,o--}let s=Math.min(n-(e-r),53),i=t[o];i=b(i,s);let u=t.slice(o);return u[0]=i,u}function N(t){let n=t[0];for(let e=1;e<t.length;e++)n+=t[e];return n}function w(t,n){const e=t.length,r=n.length;let o=0,s=0;const i=[];for(;o<e&&s<r;)0!==t[o]?0!==n[s]?Math.abs(t[o])<=Math.abs(n[s])?(i.push(t[o]),o++):(i.push(n[s]),s++):s++:o++;for(;o<e;)i.push(t[o]),o++;for(;s<r;)i.push(n[s]),s++;if(0===i.length)return[0];const u=i.length;if(1===u)return i;const l=[],a=i[1],f=i[0];let c=a+f;const h=f-(c-a);0!==h&&l.push(h),s=0;for(let t=2;t<u;t++){const n=i[t],e=c+n,r=e-c,o=c-(e-r)+(n-r);0!==o&&l.push(o),c=e}return 0===c&&0!==l.length||l.push(c),l}const S=134217729;function v(t,n){const e=t.length;let r;const o=t[0];let s=o*n;const i=S*o,u=i-(i-o),l=o-u,a=S*n,f=a-(a-n),c=n-f,h=[],g=l*c-(s-u*f-l*f-u*c);0!==g&&h.push(g);for(let o=1;o<e;o++){const e=t[o],i=e*n,u=S*e,l=u-(u-e),a=e-l,f=S*n,c=f-(f-n),g=n-c,p=a*g-(i-l*c-a*c-l*g),d=s+p,b=d-s,m=s-(d-b)+(p-b);0!==m&&h.push(m),r=d;const x=i+r,D=r-(x-i);0!==D&&h.push(D),s=x}return 0===s&&0!==h.length||h.push(s),h}function B(t,n){const e=n.length;let r;const o=n[0];let s=o*t;const i=S*o,u=i-(i-o),l=o-u,a=S*t,f=a-(a-t),c=t-f,h=[],g=l*c-(s-u*f-l*f-u*c);0!==g&&h.push(g);for(let o=1;o<e;o++){const e=n[o],i=e*t,u=S*e,l=u-(u-e),a=e-l,f=S*t,c=f-(f-t),g=t-c,p=a*g-(i-l*c-a*c-l*g),d=s+p,b=d-s,m=s-(d-b)+(p-b);0!==m&&h.push(m),r=d;const x=i+r,D=r-(x-i);0!==D&&h.push(D),s=x}return 0===s&&0!==h.length||h.push(s),h}const M=v,A=w;function y(t,n){let e=[0];for(let r=0;r<t.length;r++)e=A(e,M(n,t[r]));return e}function E(t){const n=t.length,e=new Array(n);for(let r=0;r<n;r++)e[r]=-t[r];return e}const F=E,P=w;function T(t,n){const e=F(n);return P(t,e)}function I(t){return 0===t?0:h(t)-f(t)+1}function O(t){let n=d(t);if(0===e(n))return 0;let r=n[n.length-1],o=n[0];return g(r)-g(o)+(53-f(o))}const K=y,L=D,k=O,j=T,C=N;function X(t,n,e){let r=n,o=t,s=!1,i=0;e||(i=k(o)-k(r)+1,e=i/53+1,s=!0);let u=[1/C(r)],l=1;for(;;){if(o=K(o,u),l>e)return s?(o=L(o,i),o):o.slice(o.length-e,o.length);r=K(r,u),u=j([2],r),l*=2}}function Z(t,n){const e=t.length;let r=n;const o=[];for(let n=0;n<e;n++){const e=t[n],s=r+e,i=s-r;let u=r-(s-i)+(e-i);0!==u&&o.push(u),r=s}return 0===r&&0!==o.length||o.push(r),o}function z(t,n){const e=t+n,r=e-t;return[t-(e-r)+(n-r),e]}const V=z,$=Z,q=w;function G(t){let n=[0];for(let e=0;e<t.length;e++){const r=t[e];n=1===r.length?1===n.length?V(n[0],r[0]):$(n,r[0]):1===n.length?$(r,n[0]):q(n,r)}return n}const H=E,J=w,Q=d,R=Z,_=G,W=v,Y=T,U=Math.sign;function tt(t,n){t=Q(t);let e=(n=Q(n))[n.length-1];if(1===n.length){if(0===e)throw new Error("division by zero");if(1===e)return{div:t,rem:[0]};if(-1===e)return{div:H(t),rem:[0]}}const r=U(t[t.length-1]);if(0===r)return{div:[0],rem:[0]};let o=U(e),s=[],i=0;for(;;){let r=[];for(let o=t.length-1;o>=0;o--){const i=t[o];let u=Math.round((i-i%e)/e);if(r.push(W(n,u)),0===u)break;s.push(u)}if(t=Q(Y(t,_(r))),i===s.length)break;i=s.length}let u=t,l=[0];for(let t=0;t<s.length;t++)l=R(l,s[t]);l=Q(l);const a=U(u[u.length-1]);return 0!==a&&a!==r&&(r>0?o>0?(l=R(l,-1),u=J(u,n)):(l=R(l,1),u=J(u,H(n))):r<0&&(o>0?(l=R(l,1),u=J(u,H(n))):(l=R(l,-1),u=J(u,n)))),{div:l,rem:u}}const nt=tt;function et(t,n){return nt(t,n).div}const rt=tt;function ot(t,n){return rt(t,n).rem}function st(t,n){return e(T(t,n))}const it=E;function ut(t){return t[t.length-1]<0?it(t):t}function lt(t,n){const e=t-n;return[t-e-n,e]}function at(t,n){const e=t+n;return[n-(e-t),e]}function ft(t){const n=[];for(let e=0;e<t.length;e++)n.push(2*t[e]);return n}function ct(t){const n=[];for(let e=0;e<t.length;e++)n.push(-2*t[e]);return n}function ht(t){const n=[];for(let e=0;e<t.length;e++)n.push(.5*t[e]);return n}function gt(t){const n=134217729*t,e=n-(n-t);return[e,t-e]}function pt(t,n){const e=t-n,r=t-e;return[t-(e+r)+(r-n),e]}function dt(t,n){const e=t*n,r=134217729*t,o=r-(r-t),s=t-o,i=134217729*n,u=i-(i-n),l=n-u;return[s*l-(e-o*u-s*u-o*l),e]}function bt(t,n,e){if(0===t)return!0;let r=g(t),o=h(t)-52+r;return f(t)-52+r>=e&&o<=n-1+e}function mt(t){if(0===t||!Number.isFinite(t))return NaN;let n=g(t);return f(t)-52+n}const xt=y,Dt=dt,Nt=v,wt=z,St=Z,vt=w;function Bt(t){let n=[0];for(let e=0;e<t.length;e++){const r=t[e];let o=r[0];for(let t=1;t<r.length;t++){const n=r[t];o=1==n.length?1===o.length?Dt(o[0],n[0]):Nt(o,n[0]):1===o.length?Nt(n,o[0]):xt(n,o)}n=1===o.length?1===n.length?wt(n[0],o[0]):St(n,o[0]):1===n.length?St(o,n[0]):vt(n,o)}return n}const Mt=y,At=dt,yt=v,Et=d;function Ft(t){let n=t[0];for(let e=1;e<t.length;e++){const r=t[e];n=1==r.length?1===n.length?At(n[0],r[0]):yt(n,r[0]):1===n.length?yt(r,n[0]):Mt(r,n)}return Et(n)}const Pt=y,Tt=Ft;function It(t,n){if(0===n)return[1];if(1===n)return t;if(2===n)return Pt(t,t);const e=[];for(let r=0;r<n;r++)e.push(t);return Tt(e)}const Ot=d;function Kt(t){const n=(t=Ot(t)).length;return 2===n?t:1===n?[0,t[0]]:[t[n-2],t[n-1]]}function Lt(t,n,e){let r,o=(t[0]-e[0])*(n[1]-e[1]),s=(t[1]-e[1])*(n[0]-e[0]),i=o-s;if(o>0){if(s<=0)return i;r=o+s}else{if(!(o<0))return i;if(s>=0)return i;r=-o-s}return Math.abs(i)>=3330669073875472e-31*r?i:function(t,n,e,r){let o=t[0]-e[0],s=n[0]-e[0],i=t[1]-e[1],u=n[1]-e[1],l=T(dt(o,u),dt(i,s)),a=N(l);if(Math.abs(a)>=2220446049250315e-31*r)return a;let f=pt(t[0],e[0])[0],c=pt(n[0],e[0])[0],h=pt(t[1],e[1])[0],g=pt(n[1],e[1])[0];if(0===f&&0===h&&0===c&&0===g)return a;let p=1109335647967049e-46*r+3330669073875471e-31*Math.abs(a);if(a+=o*g+u*f-(i*c+s*h),Math.abs(a)>=p)return a;let b=w(l,T(dt(f,u),dt(h,s))),m=w(b,T(dt(o,g),dt(i,c))),x=w(m,T(dt(f,g),dt(h,c)));return x=d(x),x[x.length-1]}(t,n,e,r)}function kt(t,n){return!function(t,n){if(0===t||0===n)return!0;Math.abs(n)>Math.abs(t)&&([t,n]=[n,t]);let e=f(t),r=h(n);return e+(g(t)-g(n))>r}(t,n)}function jt(t){for(let n=1;n<t.length;n++)if(kt(t[n-1],t[n]))return!1;return!0}function Ct(t,n){return kt(t,n)||kt(t,2*n)||kt(2*t,n)}function Xt(t){t=d(t);for(let n=0;n<t.length;n++)if(t[n]%1!=0)return!1;return!0}const Zt=w,zt=Z,Vt=y,$t=v,qt=B,Gt={fastTwoDiff:lt,fastTwoSum:at,split:gt,twoDiff:pt,twoProduct:dt,twoSum:z,reduceSignificand:b,fastExpansionSum:w,eAdd:Zt,growExpansion:Z,eAddDouble:zt,expansionProduct:y,eMult:Vt,scaleExpansion:v,eMultDouble1:$t,scaleExpansion2:B,eMultDouble2:qt,eDiv:X,eLongDivide:tt,eIntDiv:et,eRem:ot,eCompress:d,eEstimate:N,eDiff:T,eNegativeOf:E,eMultBy2:ft,eMultByNeg2:ct,eDivBy2:ht,eSign:e,eCompare:st,eAbs:ut,eToBitlength:D,eIntPow:It,eCalculate:Bt,eSum:G,eProduct:Ft,eToDd:Kt,parseDouble:i,parseDoubleDetailed:u,isBitAligned:bt,msbExponent:p,lsbExponent:mt,bitLength:I,expBitLength:O,doubleToBinaryString:o,doubleToOctets:r,getHighestSetBit:h,getLowestSetBit:f,exponent:g,significand:l,orient2d:Lt,isAdjacent:Ct,isNonOverlappingAll:jt,eIsInteger:Xt};var Ht=n.ZS,Jt=n.pr,Qt=n.xm,Rt=n.uP,_t=n._L,Wt=n.lG,Yt=n.$0,Ut=n.AM,tn=n.Zx,nn=n.w1,en=n.sZ,rn=n.lX,on=n.$A,sn=n.yl,un=n.K9,ln=n.lb,an=n.bN,fn=n.xr,cn=n.aB,hn=n.kS,gn=n.fX,pn=n.xS,dn=n.ab,bn=n.Fp,mn=n.bx,xn=n.qv,Dn=n.g_,Nn=n.XB,wn=n.fN,Sn=n.kq,vn=n.Q7,Bn=n.ts,Mn=n.xK,An=n.Fz,yn=n.vz,En=n.kx,Fn=n.hK,Pn=n.Yj,Tn=n.Ku,In=n.m5,On=n.V1,Kn=n.pt,Ln=n.Jw,kn=n.Gn,jn=n.IW,Cn=n.Ds,Xn=n.JO,Zn=n.S4,zn=n.Fs,Vn=n.R9,$n=n.aK,qn=n.Vl,Gn=n.BH,Hn=n.Q6,Jn=n.d9;export{Ht as bitLength,Jt as doubleToBinaryString,Qt as doubleToOctets,Rt as eAbs,_t as eAdd,Wt as eAddDouble,Yt as eCalculate,Ut as eCompare,tn as eCompress,nn as eDiff,en as eDiv,rn as eDivBy2,on as eEstimate,sn as eIntDiv,un as eIntPow,ln as eIsInteger,an as eLongDivide,fn as eMult,cn as eMultBy2,hn as eMultByNeg2,gn as eMultDouble1,pn as eMultDouble2,dn as eNegativeOf,bn as eProduct,mn as eRem,xn as eSign,Dn as eSum,Nn as eToBitlength,wn as eToDd,Sn as expBitLength,vn as expansionProduct,Bn as exponent,Mn as fastExpansionSum,An as fastTwoDiff,yn as fastTwoSum,En as getHighestSetBit,Fn as getLowestSetBit,Pn as growExpansion,Tn as isAdjacent,In as isBitAligned,On as isNonOverlappingAll,Kn as lsbExponent,Ln as msbExponent,kn as operators,jn as orient2d,Cn as parseDouble,Xn as parseDoubleDetailed,Zn as reduceSignificand,zn as scaleExpansion,Vn as scaleExpansion2,$n as significand,qn as split,Gn as twoDiff,Hn as twoProduct,Jn as twoSum};